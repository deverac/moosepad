diff --git a/mousepad/configure.ac.in b/mousepad/configure.ac.in
index 47d101b..ed0d8ee 100644
--- a/mousepad/configure.ac.in
+++ b/mousepad/configure.ac.in
@@ -19,7 +19,7 @@ dnl *** Initialize autoconf ***
 dnl ***************************
 AC_COPYRIGHT([Copyright (c) 2007-2010
         The Xfce development team. All rights reserved.])
-AC_INIT([Mousepad], [mousepad_version], [http://bugzilla.xfce.org/], [mousepad])
+AC_INIT([Moosepad], [mousepad_version], [http://bugzilla.xfce.org/], [mousepad])
 AC_PREREQ([2.50])
 AC_CONFIG_MACRO_DIR([m4])
 AC_CANONICAL_TARGET()
diff --git a/mousepad/mousepad.desktop.in.in b/mousepad/mousepad.desktop.in.in
index 96ca08d..bd6e970 100644
--- a/mousepad/mousepad.desktop.in.in
+++ b/mousepad/mousepad.desktop.in.in
@@ -1,9 +1,9 @@
 
 [Desktop Entry]
-_Name=Mousepad
+_Name=Moosepad
 _Comment=Simple Text Editor
 _GenericName=Text Editor
-Exec=mousepad %F
+Exec=moosepad %F
 Icon=accessories-text-editor
 Terminal=false
 StartupNotify=true
diff --git a/mousepad/mousepad/mousepad-application.c b/mousepad/mousepad/mousepad-application.c
index 5d4dc21..31cadbf 100644
--- a/mousepad/mousepad/mousepad-application.c
+++ b/mousepad/mousepad/mousepad-application.c
@@ -280,6 +280,7 @@ mousepad_application_new_window_with_files (MousepadApplication  *application,
   gboolean          succeed = FALSE;
   MousepadDocument *document;
   GtkWindowGroup   *window_group;
+  gboolean         exit_app = FALSE;
 
   g_return_if_fail (MOUSEPAD_IS_APPLICATION (application));
   g_return_if_fail (screen == NULL || GDK_IS_SCREEN (screen));
@@ -302,6 +303,8 @@ mousepad_application_new_window_with_files (MousepadApplication  *application,
   /* open an empty document */
   if (succeed == FALSE)
     {
+      exit_app = filenames && g_strv_length (filenames) && (mousepad_window_get_number_of_pages (window) == 0);
+
       /* create a new document */
       document = mousepad_document_new ();
 
@@ -311,6 +314,8 @@ mousepad_application_new_window_with_files (MousepadApplication  *application,
 
   /* show the window */
   gtk_widget_show (window);
+
+  if (exit_app) gtk_window_close(window);
 }
 
 
diff --git a/mousepad/mousepad/mousepad-dbus.c b/mousepad/mousepad/mousepad-dbus.c
index a0c0a5f..b40426a 100644
--- a/mousepad/mousepad/mousepad-dbus.c
+++ b/mousepad/mousepad/mousepad-dbus.c
@@ -14,6 +14,38 @@
  * Place, Suite 330, Boston, MA  02111-1307  USA
  */
 
+/*
+  MOOSEPAD CHANGES:
+
+  The 'Lossy' encoding has been added. The Lossy encoding replaces NULL values
+  with a space. This allows _any_ file to be opened, although the displayed
+  contents will not accurately reflect the contents of the original file.
+
+  For various reasons, some text documents cannot be converted to UTF-8. When
+  this happens, Mousepad will refuse to load the document. Moosepad can load
+  them via the Lossy encoding.
+
+  If the encoding dialog is canceled or closed, Mousepad will open a blank
+  window; Moosepad will exit. Moosepad will only exit if no other files
+  are loaded.
+
+  In the encoding dialog, Mousepad auto-selects the 'System' encoding. If the
+  System encoding has been set to UTF-8, this accomplishes nothing, since
+  Mousepad has already tried, and failed, to load the document as UTF-8.
+  Moosepad auto-selects the combo box which enables the Lossy encoding; this
+  allows the file to be viewed in the preview box.
+
+  In the encoding dialog, Mousepad does not wrap text; Moosepad does wrap text.
+
+  BUGS:
+
+  Moosepad is a minimum 'port' of Mousepad. They are seen as different apps
+  by dbus, and the title has been changed. Both apps share everything else
+  such as Preferences, Recent files, etc.
+
+  There are no translations for added English text.
+*/
+
 #include <mousepad/mousepad-private.h>
 #include <mousepad/mousepad-dbus.h>
 /* include the dbus glue generated by gdbus-codegen */
@@ -29,7 +61,7 @@
 
 
 
-#define MOUSEPAD_DBUS_PATH      "/org/xfce/Mousepad"
+#define MOUSEPAD_DBUS_PATH      "/org/xfce/Moosepad"
 #define MOUSEPAD_DBUS_INTERFACE "org.xfce.Mousepad"
 
 
diff --git a/mousepad/mousepad/mousepad-dialogs.c b/mousepad/mousepad/mousepad-dialogs.c
index 76745b9..bd0b0c9 100644
--- a/mousepad/mousepad/mousepad-dialogs.c
+++ b/mousepad/mousepad/mousepad-dialogs.c
@@ -41,7 +41,7 @@ mousepad_dialogs_show_about (GtkWindow *parent)
   /* show the dialog */
   gtk_show_about_dialog (parent,
                          "authors", authors,
-                         "comments", _("Mousepad is a fast text editor for the Xfce Desktop Environment."),
+                         "comments", _("Mousepad is a fast text editor for the Xfce Desktop Environment. This is an unofficial, patched version of Mousepad. "),
                          "destroy-with-parent", TRUE,
                          "logo-icon-name", "accessories-text-editor",
                          "program-name", PACKAGE_NAME,
diff --git a/mousepad/mousepad/mousepad-encoding-dialog.c b/mousepad/mousepad/mousepad-encoding-dialog.c
index 110a3c9..80e034b 100644
--- a/mousepad/mousepad/mousepad-encoding-dialog.c
+++ b/mousepad/mousepad/mousepad-encoding-dialog.c
@@ -78,6 +78,8 @@ struct _MousepadEncodingDialog
   GtkWidget     *button_cancel;
   GtkWidget     *error_box;
   GtkWidget     *error_label;
+  GtkWidget     *warn_box;
+  GtkWidget     *warn_label;
   GtkWidget     *progress_bar;
 
   /* the three radio button */
@@ -116,6 +118,7 @@ mousepad_encoding_dialog_init (MousepadEncodingDialog *dialog)
 {
   const gchar     *system_charset;
   gchar           *system_label;
+  gchar           *warn_message;
   GtkWidget       *vbox, *hbox, *icon;
   GtkCellRenderer *cell;
 
@@ -202,6 +205,24 @@ mousepad_encoding_dialog_init (MousepadEncodingDialog *dialog)
   gtk_label_set_use_markup (GTK_LABEL (dialog->error_label), TRUE);
   gtk_widget_show (dialog->error_label);
 
+  /* warn box */
+  dialog->warn_box = gtk_box_new (GTK_ORIENTATION_HORIZONTAL, 6);
+  gtk_box_pack_start (GTK_BOX (vbox), dialog->warn_box, FALSE, FALSE, 0);
+
+  /* warn icon */
+  icon = gtk_image_new_from_icon_name ("dialog-warning", GTK_ICON_SIZE_BUTTON);
+  gtk_box_pack_start (GTK_BOX (dialog->warn_box), icon, FALSE, FALSE, 0);
+  gtk_widget_show (icon);
+
+  /* warn label */
+  dialog->warn_label = gtk_label_new (NULL);
+  gtk_box_pack_start (GTK_BOX (dialog->warn_box), dialog->warn_label, FALSE, FALSE, 0);
+  gtk_label_set_use_markup (GTK_LABEL (dialog->warn_label), TRUE);
+  warn_message = g_strdup_printf ("<b>%s</b>", _("Data was modified. Save as new file to avoid altering original file."));
+  gtk_label_set_markup (GTK_LABEL (dialog->warn_label), warn_message);
+  gtk_widget_show (dialog->warn_label);
+  g_free (warn_message);
+
   /* create text view */
   dialog->document = mousepad_document_new ();
   gtk_box_pack_start (GTK_BOX (vbox), GTK_WIDGET (dialog->document), TRUE, TRUE, 0);
@@ -209,7 +230,6 @@ mousepad_encoding_dialog_init (MousepadEncodingDialog *dialog)
   gtk_text_view_set_cursor_visible (GTK_TEXT_VIEW (dialog->document->textview), FALSE);
   g_settings_unbind (G_OBJECT (dialog->document->textview), "show-line-numbers");
   gtk_source_view_set_show_line_numbers (GTK_SOURCE_VIEW (dialog->document->textview), FALSE);
-  gtk_text_view_set_wrap_mode (GTK_TEXT_VIEW (dialog->document->textview), GTK_WRAP_NONE);
   gtk_widget_show (GTK_WIDGET (dialog->document));
 }
 
@@ -254,6 +274,7 @@ mousepad_encoding_dialog_test_encodings_idle (gpointer user_data)
   gsize                   length, written;
   guint                   i, n;
   gchar                  *encoded;
+  gboolean                was_altered;
 
   /* get the filename */
   filename = mousepad_file_get_filename (dialog->document->file);
@@ -279,7 +300,7 @@ mousepad_encoding_dialog_test_encodings_idle (gpointer user_data)
                   gtk_progress_bar_set_fraction (GTK_PROGRESS_BAR (dialog->progress_bar), (i + 1.00) / n_encoding_infos);
 
                   /* try to convert the content */
-                  encoded = g_convert (contents, length, "UTF-8", encoding_infos[i].charset, NULL, &written, NULL);
+                  mousepad_encoding_g_convert_to_utf8 (&encoded, contents, length, encoding_infos[i].charset, &written, NULL, &was_altered);
 
                   if (G_LIKELY (encoded))
                     {
@@ -326,6 +347,9 @@ mousepad_encoding_dialog_test_encodings_idle (gpointer user_data)
   /* select the first item */
   gtk_combo_box_set_active (GTK_COMBO_BOX (dialog->combo), 0);
 
+  /* give focus to combo box */
+  gtk_widget_grab_focus(dialog->combo);
+
   return FALSE;
 }
 
@@ -373,6 +397,7 @@ mousepad_encoding_dialog_read_file (MousepadEncodingDialog *dialog,
   GError      *error = NULL;
   gchar       *message;
   gint         result;
+  gboolean     was_lossy;
 
   /* clear buffer */
   gtk_text_buffer_get_bounds (dialog->document->buffer, &start, &end);
@@ -382,11 +407,17 @@ mousepad_encoding_dialog_read_file (MousepadEncodingDialog *dialog,
   mousepad_file_set_encoding (dialog->document->file, encoding);
 
   /* try to open the file */
-  result = mousepad_file_open (dialog->document->file, NULL, &error);
+  result = mousepad_file_open_lossy (dialog->document->file, NULL, &error, &was_lossy);
 
   /* set sensitivity of the ok button */
   gtk_widget_set_sensitive (dialog->button_ok, result == 0);
 
+  if (was_lossy) {
+    gtk_widget_show (dialog->warn_box);
+  } else {
+    gtk_widget_hide (dialog->warn_box);
+  }
+
   if (result == 0)
     {
       /* no error, hide the box */
@@ -482,7 +513,7 @@ mousepad_encoding_dialog_new (GtkWindow    *parent,
   mousepad_file_set_filename (dialog->document->file, mousepad_file_get_filename (file));
 
   /* start with the system encoding */
-  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (dialog->radio_system), TRUE);
+  gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON (dialog->radio_other), TRUE);
 
   /* queue idle function */
   mousepad_encoding_dialog_test_encodings (dialog);
diff --git a/mousepad/mousepad/mousepad-encoding.c b/mousepad/mousepad/mousepad-encoding.c
index 2627e9d..681435c 100644
--- a/mousepad/mousepad/mousepad-encoding.c
+++ b/mousepad/mousepad/mousepad-encoding.c
@@ -17,10 +17,12 @@
 #include <mousepad/mousepad-private.h>
 #include <mousepad/mousepad-encoding.h>
 
-
+const gchar LOSSY_ENCODING_NAME[] = "Lossy ISO-8859-1";
 
 const MousepadEncodingInfo encoding_infos[] =
 {
+  { MOUSEPAD_ENCODING_LOSSY,        LOSSY_ENCODING_NAME, N_("Western") },
+
   /* west european */
   { MOUSEPAD_ENCODING_ISO_8859_14,  "ISO-8859-14",      N_("Celtic") },
   { MOUSEPAD_ENCODING_ISO_8859_7,   "ISO-8859-7",       N_("Greek") },
@@ -101,6 +103,73 @@ guint n_encoding_infos = G_N_ELEMENTS (encoding_infos);
 
 
 
+static gboolean
+mousepad_encoding_is_lossy_codeset(const gchar *codeset)
+{
+  // return (g_strcmp0(codeset, "Lossy ISO-8859-1") == 0);
+  return (g_strcmp0(codeset, LOSSY_ENCODING_NAME) == 0);
+}
+
+
+
+static gchar *
+mousepad_encoding_get_actual_codeset(const gchar * codeset)
+{
+  return (mousepad_encoding_is_lossy_codeset(codeset) ? "ISO-8859-1" : codeset);
+}
+
+
+
+/*
+  A wrapper around g_convert() which has 'UTF-8' as the target charset and, if
+  charset is Lossy, will remove NULLs from the converted string. If converted
+  string is modified, 'was_altered' will be set to TRUE.
+*/
+void
+mousepad_encoding_g_convert_to_utf8 (gchar        **enc,
+                                     const gchar   *str,
+                                     gssize         len,
+                                     const gchar   *from_codeset,
+                                     gsize         *bytes_written,
+                                     GError       **error,
+                                     gboolean      *was_altered)
+{
+  const gchar *src_charset = mousepad_encoding_get_actual_codeset(from_codeset);
+  *was_altered = FALSE;
+
+  *enc = g_convert (str, len, "UTF-8", src_charset, NULL, bytes_written, error);
+
+  if (mousepad_encoding_is_lossy_codeset(from_codeset)) {
+    guint i;
+    for (i = 0; i < *bytes_written; i++) {
+      if ((*enc)[i] == 0) {
+        (*enc)[i] = 0x20;
+        *was_altered = TRUE;
+      }
+    }
+  }
+}
+
+
+
+/*
+  A wrapper around g_convert() which has 'UTF-8' as the source charset.
+*/
+void
+mousepad_encoding_g_convert_from_utf8 (const gchar  **enc,
+                                       const gchar   *str,
+                                       gssize         len,
+                                       const gchar   *to_codeset,
+                                       gsize         *bytes_written,
+                                       GError       **error)
+{
+  const gchar *tgt_charset = mousepad_encoding_get_actual_codeset(to_codeset);
+
+  *enc = g_convert (str, len, tgt_charset, "UTF-8", NULL, bytes_written, error);
+}
+
+
+
 const gchar *
 mousepad_encoding_get_charset (MousepadEncoding encoding)
 {
diff --git a/mousepad/mousepad/mousepad-encoding.h b/mousepad/mousepad/mousepad-encoding.h
index 5addfe1..768ee1d 100644
--- a/mousepad/mousepad/mousepad-encoding.h
+++ b/mousepad/mousepad/mousepad-encoding.h
@@ -25,6 +25,7 @@ typedef enum
 {
   MOUSEPAD_ENCODING_NONE,
   MOUSEPAD_ENCODING_CUSTOM,
+  MOUSEPAD_ENCODING_LOSSY,
 
   MOUSEPAD_ENCODING_ISO_8859_1,
   MOUSEPAD_ENCODING_ISO_8859_2,
@@ -120,6 +121,21 @@ MousepadEncoding  mousepad_encoding_find        (const gchar      *charset);
 
 gboolean          mousepad_encoding_is_unicode  (MousepadEncoding  encoding);
 
+void     mousepad_encoding_g_convert_to_utf8    (gchar           **enc,
+                                                 const gchar      *str,
+                                                 gssize            len,
+                                                 const gchar      *from_codeset,
+                                                 gsize            *bytes_written,
+                                                 GError          **error,
+                                                 gboolean         *was_altered);
+
+void     mousepad_encoding_g_convert_from_utf8  (const gchar     **enc,
+                                                 const gchar      *str,
+                                                 gssize            len,
+                                                 const gchar      *to_codeset,
+                                                 gsize            *bytes_written,
+                                                 GError          **error);
+
 G_END_DECLS
 
 #endif /* !__MOUSEPAD_ENCODINGS_H__ */
diff --git a/mousepad/mousepad/mousepad-file.c b/mousepad/mousepad/mousepad-file.c
index 453d48a..5739021 100644
--- a/mousepad/mousepad/mousepad-file.c
+++ b/mousepad/mousepad/mousepad-file.c
@@ -480,9 +480,10 @@ mousepad_file_guess_language (MousepadFile *file)
 
 
 gint
-mousepad_file_open (MousepadFile  *file,
-                    const gchar   *template_filename,
-                    GError       **error)
+mousepad_file_open_lossy (MousepadFile  *file,
+                          const gchar   *template_filename,
+                          GError       **error,
+                          gboolean      *was_lossy)
 {
   GMappedFile      *mapped_file;
   const gchar      *filename;
@@ -567,7 +568,7 @@ mousepad_file_open (MousepadFile  *file,
               charset = mousepad_encoding_get_charset (file->encoding);
 
               /* convert the contents */
-              encoded = g_convert (contents, file_size, "UTF-8", charset, NULL, &written, error);
+              mousepad_encoding_g_convert_to_utf8 (&encoded, contents, file_size, charset, &written, error, was_lossy);
 
               /* check if the string is utf-8 valid */
               if (G_UNLIKELY (encoded == NULL))
@@ -705,6 +706,20 @@ mousepad_file_open (MousepadFile  *file,
 }
 
 
+/*
+  A wrapper for calls to 'mousepad_file_open_lossy()' that don't care about
+ the 'conversion_was_lossy' parameter.
+*/
+gint
+mousepad_file_open (MousepadFile  *file,
+                    const gchar   *template_filename,
+                    GError       **error)
+{
+  gboolean was_lossy;
+  return mousepad_file_open_lossy (file, template_filename, error, &was_lossy);
+}
+
+
 
 gboolean
 mousepad_file_save (MousepadFile  *file,
@@ -806,7 +821,7 @@ mousepad_file_save (MousepadFile  *file,
                 goto failed;
 
               /* convert the content to the user encoding */
-              encoded = g_convert (contents, length, charset, "UTF-8", NULL, &written, error);
+              mousepad_encoding_g_convert_from_utf8 (&encoded, contents, length, charset, &written, error);
 
               /* return if nothing was encoded */
               if (G_UNLIKELY (encoded == NULL))
diff --git a/mousepad/mousepad/mousepad-file.h b/mousepad/mousepad/mousepad-file.h
index d907a8d..9479ecf 100644
--- a/mousepad/mousepad/mousepad-file.h
+++ b/mousepad/mousepad/mousepad-file.h
@@ -90,6 +90,11 @@ gint                mousepad_file_open                     (MousepadFile
                                                             const gchar         *template_filename,
                                                             GError             **error);
 
+gint                mousepad_file_open_lossy               (MousepadFile        *file,
+                                                            const gchar         *template_filename,
+                                                            GError             **error,
+                                                            gboolean            *conversion_was_lossy);
+
 gboolean            mousepad_file_save                     (MousepadFile        *file,
                                                             GError             **error);
 
diff --git a/mousepad/mousepad/mousepad-window.c b/mousepad/mousepad/mousepad-window.c
index a5231c4..d59f010 100644
--- a/mousepad/mousepad/mousepad-window.c
+++ b/mousepad/mousepad/mousepad-window.c
@@ -1539,6 +1539,7 @@ mousepad_window_open_files (MousepadWindow  *window,
 {
   guint  n;
   gchar *filename;
+  gboolean is_ok = TRUE;
 
   g_return_val_if_fail (MOUSEPAD_IS_WINDOW (window), FALSE);
   g_return_val_if_fail (working_directory != NULL, FALSE);
@@ -1569,7 +1570,7 @@ mousepad_window_open_files (MousepadWindow  *window,
         }
 
       /* open a new tab with the file */
-      mousepad_window_open_file (window, filename ? filename : filenames[n], MOUSEPAD_ENCODING_UTF_8);
+      is_ok = is_ok && mousepad_window_open_file (window, filename ? filename : filenames[n], MOUSEPAD_ENCODING_UTF_8);
 
       /* cleanup */
       g_free (filename);
@@ -1578,6 +1579,8 @@ mousepad_window_open_files (MousepadWindow  *window,
   /* allow menu updates again */
   lock_menu_updates--;
 
+  if (!is_ok) return FALSE;
+
   /* check if the window contains tabs */
   if (gtk_notebook_get_n_pages (GTK_NOTEBOOK (window->notebook)) == 0)
     return FALSE;
@@ -1590,6 +1593,12 @@ mousepad_window_open_files (MousepadWindow  *window,
 }
 
 
+guint
+mousepad_window_get_number_of_pages (MousepadWindow *window)
+{
+  return gtk_notebook_get_n_pages (GTK_NOTEBOOK (window->notebook));
+}
+
 
 void
 mousepad_window_add (MousepadWindow   *window,
